name: CI/CD - rag-vocabulary-system

on:
  push:
    paths:
      - 'rag-vocabulary-system/**'
      - '.github/workflows/deploy-vocabulary-service.yml'
    branches: [dev]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        working-directory: ./rag-vocabulary-system
        run: pip install -r requirements.txt

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/rag-vocabulary-system:latest ./rag-vocabulary-system

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/rag-vocabulary-system:latest

      - name: Check for changes in rag-vocabulary-system
        id: changes
        run: |
          if git diff --quiet HEAD^ HEAD -- rag-vocabulary-system; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
          else
            echo "no_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS Credentials
        if: steps.changes.outputs.no_changes == 'false'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Force new deployment of ECS service
        if: steps.changes.outputs.no_changes == 'false'
        run: |
          aws ecs update-service \
            --cluster research-project-deploy \
            --service peronalize-vocabulary-service--service- \
            --force-new-deployment
